{"title":"JS扁平化数组递归和非递归方法","uid":"22456837ffa047303a9126edfee6e71f","slug":"article-03","date":"2022-04-26T17:42:30.000Z","updated":"2022-04-26T17:51:25.000Z","comments":true,"path":"api/articles/article-03.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/04/27/26b4fd6fa80a2052.jpeg","content":"<p>请用递归和非递归的思想扁平化多维数组,下面演示两种递归方法和非递归方法，思想都是遍历每个数组元素<br>若为数组类型则继续调用自身，否则直接压入数组</p>\n<h3 id=\"递归-forEach-concat\"><a href=\"#递归-forEach-concat\" class=\"headerlink\" title=\"递归(forEach&amp;&amp;concat)\"></a>递归(forEach&amp;&amp;concat)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [[1,[2,3]],[4,[5,6]],[7,8,9],[[10,22,34],56]]</span><br><span class=\"line\">        <span class=\"keyword\">function</span> flatten(data)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!Array.isArray(arr)) <span class=\"built_in\">return</span> -1</span><br><span class=\"line\">            var res =[]</span><br><span class=\"line\">            data.forEach(item =&gt; &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(Array.isArray(item))&#123;</span><br><span class=\"line\">                    res = res.concat(flatten(item))</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                res.push(item)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"built_in\">return</span> res</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(flatten(arr))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"递归（reduce-concat）\"><a href=\"#递归（reduce-concat）\" class=\"headerlink\" title=\"递归（reduce&amp;&amp;concat）\"></a>递归（reduce&amp;&amp;concat）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [[1, [2, 3]], [4, [5, 6]], [7, 8, 9], [[10, [[22], 34]], 56]]</span><br><span class=\"line\">const flatten = (arr) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> arr.reduce((result, item) =&gt; &#123;</span><br><span class=\"line\">          return result.concat(Array.isArray(item) ? flatten(item) : item);</span><br><span class=\"line\">      &#125;, []);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  console.log(flatten(arr))</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"非递归-forEach-concat\"><a href=\"#非递归-forEach-concat\" class=\"headerlink\" title=\"非递归(forEach&amp;&amp;concat)\"></a>非递归(forEach&amp;&amp;concat)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [[1,[2,3]],[4,[5,6]],[7,8,9],[[10,[[22],34]],56]]</span><br><span class=\"line\">     <span class=\"keyword\">function</span> flatten(data)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!Array.isArray(data)) <span class=\"built_in\">return</span> -1</span><br><span class=\"line\">        var res = []</span><br><span class=\"line\">        data.forEach(item =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(Array.isArray(item))&#123;</span><br><span class=\"line\">          res = res.concat(item.flat(Infinity))</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">       <span class=\"built_in\">return</span> res</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   console.log(flatten(arr));//[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 34, 56]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"非递归（split-toString-）\"><a href=\"#非递归（split-toString-）\" class=\"headerlink\" title=\"非递归（split&amp;toString()）\"></a>非递归（split&amp;toString()）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [[1,[2,3]],[4,[5,6]],[7,8,9],[[10,[[22],34]],56]]</span><br><span class=\"line\"> const flatten = data =&gt; data.toString().<span class=\"built_in\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>).map(item =&gt; Number(item))</span><br><span class=\"line\"> console.log(flatten(arr));//[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 22, 34, 56]</span><br></pre></td></tr></table></figure>","feature":true,"text":"请用递归和非递归的思想扁平化多维数组,下面演示两种递归方法和非递归方法，思想都是遍历每个数组元素若为数组类型则继续调用自身，否则直接压入数组 递归(forEac...","permalink":"/post/article-03","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","count":4,"path":"api/categories/JAVASCRIPT.json"}],"tags":[{"name":"扁平化数组","slug":"扁平化数组","count":1,"path":"api/tags/扁平化数组.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92-forEach-concat\"><span class=\"toc-text\">递归(forEach&amp;&amp;concat)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%EF%BC%88reduce-concat%EF%BC%89\"><span class=\"toc-text\">递归（reduce&amp;&amp;concat）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E9%80%92%E5%BD%92-forEach-concat\"><span class=\"toc-text\">非递归(forEach&amp;&amp;concat)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E9%80%92%E5%BD%92%EF%BC%88split-toString-%EF%BC%89\"><span class=\"toc-text\">非递归（split&amp;toString()）</span></a></li></ol>","author":{"name":"AliceAllenAntony","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/07/11/668eb086891b5.jpg","link":"/","description":"<b>欢迎来到小许的博客</b> <br /><br /><b>一位正在重塑知识的技术人</b> <br /><br><b>日常分享开发过程中遇到的问题</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"查找包含相同数字的较小正整数","uid":"d5f6268e8ac152b60a0e9fc8afaf78f8","slug":"article_02","date":"2022-04-24T06:31:47.000Z","updated":"2022-04-26T17:49:32.000Z","comments":true,"path":"api/articles/article_02.json","keywords":null,"cover":"https://s3.bmp.ovh/imgs/2022/04/27/18427e1569757ce8.jpeg","text":"请写编写出一个函数，该函数接受一个正整数并返回下一个包含相同数字的较小正整数，当没有包含相同数字的较小数字时返回 -1，包含相同数字但第一位为0时也返回-1，比...","permalink":"/post/article_02","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","count":4,"path":"api/categories/JAVASCRIPT.json"}],"tags":[{"name":"查找最小正在数","slug":"查找最小正在数","count":1,"path":"api/tags/查找最小正在数.json"}],"author":{"name":"AliceAllenAntony","slug":"blog-author","avatar":"https://img.picui.cn/free/2024/07/11/668eb086891b5.jpg","link":"/","description":"<b>欢迎来到小许的博客</b> <br /><br /><b>一位正在重塑知识的技术人</b> <br /><br><b>日常分享开发过程中遇到的问题</b>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}